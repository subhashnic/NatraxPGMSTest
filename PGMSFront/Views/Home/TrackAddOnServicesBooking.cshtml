@model PGMSFront.Models.CommonModel
@{
    ViewBag.Title = "Add-On Services";
    if(Session["SessBookingType"] == "Track")
    {
        Layout = "~/Views/Shared/_LayoutTrack.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_LayoutLab.cshtml";
    }
}

<style>
    .table > tbody > tr > td {
        padding: 2px 8px !important;
        cursor: pointer !important;
    }

    .card {
        margin-bottom: 0px !important;
        margin-top: 10px !important;
    }

    .bootstrap-select {
        margin-top: 16px !important;
    }

    .main-panel > .content {
        margin-top: 0 !important;
    }
</style>
<div class="content">
    @using (Html.BeginForm(new { @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()
        <div class="container-fluid">
            @Html.Partial("~/Views/Home/BookingHeader.cshtml")

            <div class="row">
                <div class="card">
                    <div class="card-header">
                        <h4 class="card-title">
                            <label class="card-title"> Add-On Services Count : </label> <label class="card-title" id="lblWSCount"></label>
                            @if (Model.StatusPropId == 40 && Model.WorkFlowId == 6)
                            {
                                <button type="button" class="btn btn-fill btn-rose btn-sm pull-right" onclick="AddMore()" id="btnAdd">Add More</button>
                            }
                        </h4>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table">
                                <thead class=" text-primary">
                                    <tr>
                                        <th width="17%">Description</th>
                                        <th width="12%" style="text-align:center">Date</th>
                                        <th width="12%" style="text-align:center">Consumption</th>
                                        <th width="10%" style="text-align:center">Unit</th>
                                        <th width="10%" style="text-align:right">Rate</th>
                                        <th width="10%" style="text-align:right">Amount</th>
                                        <th width="17%">Remark</th>
                                        <th width="12%" class="text-center">Action</th>
                                    </tr>
                                </thead>
                                <tbody id="tbodyWS">
                                    <tr id="AddMoreTR" style="display: none;">
                                        <td>
                                            <select class="form-control" id="ServiceType" onchange="SetRateUnit()">
                                                <option value="0">-Select-</option>
                                                @foreach (var itm in ViewBag.ServiveLookup)
                                                {
                                                    <option value='@itm.Value'>@itm.Text</option>
                                                }
                                            </select>
                                        </td>
                                        <td><input id="Date" type="text" style="text-align:center" onblur="SetRateUnit()" class="form-control datetimepicker" ></td>
                                        <td><input id="Consumption" type="text" style="text-align:center" onchange="CalculateAmount()" onkeypress='return CheckIsNumeric(event,this);' class="form-control" value=""></td>
                                        <td><input id="Unit" disabled="disabled" style="text-align:center" type="text" class="form-control" value=""></td>
                                        <td><input id="Rate" disabled="disabled" style="text-align:right" type="text" class="form-control" value=""></td>
                                        <td><input id="Amount" disabled="disabled" type="text" style="text-align:right" class="form-control" value=""></td>
                                        <td><textarea id="Remark" class="form-control"></textarea></td>
                                        <td class='td-actions text-center'>
                                            <button type='button' rel='tooltip' id="btnSave" onclick="return AddOnServicesSave()" class='btn btn-info' data-original-title='' title=''><i class='material-icons'>save</i></button>
                                            <button type='button' rel='tooltip' class='btn btn-danger' data-original-title='' title='' onclick="AddMoreCancel()"><i class='material-icons'>close</i></button>
                                        </td>
                                        <td style='display:none'><input type='hidden' id='hdnUOMPropId' /> </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <table Style="width:100%">
                        <tr>
                            <td Style="width:50%;text-align:left">
                                <input type="submit" id="btnPrev" name="btnPrevNext" value="Prev" class="btn btn-fill btn-rose btn-sm " />
                            </td>
                            @*<td Style="width:50%;text-align:right">
                                <input type="submit" id="btnNext" name="btnPrevNext" value="Next" style="display:none" class="btn btn-fill btn-rose btn-sm " />
                            </td>*@
                        </tr>
                    </table>
                </div>
                @Html.HiddenFor(m => m.UserId, new { id = "UserId", style = "width:0px;" })
                @Html.HiddenFor(m => m.UserTypePropId, new { id = "UserTypePropId", style = "width:0px;" })
                @Html.HiddenFor(m => m.ZZCompanyId, new { id = "ZZCompanyId", style = "width:0px;" })
                @Html.HiddenFor(m => m.WorkFlowId, new { id = "WorkFlowId", style = "width:0px;" })
                @Html.HiddenFor(m => m.StatusPropId, new { id = "StatusPropId", style = "width:0px;" })
                @Html.HiddenFor(m => m.StateId, new { id = "StateId", style = "width:0px;" })
                @Html.HiddenFor(m => m.BPId, new { id = "BPId", style = "width:0px;" })
                @Html.HiddenFor(m => m.DocId, new { id = "DocId", style = "width:0px;" })
                @Html.HiddenFor(m => m.ReportURL, new { id = "ReportURL", style = "width:0px;" })
                @Html.HiddenFor(m => m.POURL, new { id = "POURL", style = "width:0px;" })
            </div>
        </div>
    }
</div>

<script>
    var BookingAddOnServiceId = 0;
    var LoadAddOnServicesList = '';

    function AddMore() {
        BookingAddOnServiceId = 0;
        $("#AddMoreTR").find("button[id='btnSave']").each(function () {
            $(this).show();
        });
        $("#AddMoreTR").find("select[id='ServiceType']").each(function () {
            $(this).val(0);
        });
        $("#AddMoreTR").find("input[type='text'][id='Date']").each(function () {
            $(this).val("");
            $('.datetimepicker').datetimepicker({ theme: 'light', timepicker: false, format: 'd-m-Y', scrollMonth: false, scrollInput: false });       
        });
        $("#AddMoreTR").find("input[type='text'][id='Consumption']").each(function () {
            $(this).val("");
        });
        $("#AddMoreTR").find("input[type='text'][id='Unit']").each(function () {
            $(this).val("");
        });
        $("#AddMoreTR").find("input[type='text'][id='Rate']").each(function () {
            $(this).val("");
        });
        $("#AddMoreTR").find("input[type='text'][id='Amount']").each(function () {
            $(this).val("");
        });
        $("#AddMoreTR").find("textarea[id='Remark']").each(function () {
            $(this).val("");
        });
        $("#AddMoreTR").find("input[type='hidden'][id='hdnUOMPropId']").each(function () {
            $(this).val("");
        });

        $("#AddMoreTR").show();
        MaskControls();
        $("#ServiceType").focus();
        
    }
    function AddMoreCancel() {
        $("#AddMoreTR").hide();
    }

    ///////////////////////////// Load Vehicle Info  //////////////////////////////////////////////////////
    function LoadAddOnServicesInfo() {
        try {
            LoaderShow();
            var data = {};
            var dataWithAntiforgeryToken = $.extend(data, { "__RequestVerificationToken": $("input[name=__RequestVerificationToken]").val() });
            $.ajax({
                url: '@Url.Action("LoadAddOnServicesInfo", "Home")',
                type: 'POST',
                dataType: 'json',
                async: true,
                data: dataWithAntiforgeryToken,
                success: function (data) {

                    LoaderHide();
                    if (data.StatusId != "99" && data.StatusId != "-99") {
                        LoadAddOnServicesList = data.LoadAddOnServicesList;
                        BindWSData(data.LoadAddOnServicesList);
                        if (LoadAddOnServicesList.length > 0) {
                            $("#btnNext").show();
                        }
                    }
                    else {
                       // alert(data.Status);
                    }
                },
                error: function (xhr) {

                    LoaderHide();
                    alert(xhr.responseText);
                }
            });
        }
        catch (e) {

            LoaderHide();
            alert(e.message);
            //  return false;
        }
    }

    //////////////////////// Vehicle Edit ////////////////////////////////////////////////////////////
    function AddOnServicesEdit(varBookingAddOnServiceId) {
        try {
            BookingAddOnServiceId = 0;
            if (LoadAddOnServicesList.length > 0) {
                var varWS = jQuery.grep(LoadAddOnServicesList, function (obj) {
                    return obj.BookingAddOnServiceId == varBookingAddOnServiceId;
                });

                BookingAddOnServiceId = NullHandle(varWS[0].BookingAddOnServiceId);

                $("#AddMoreTR").find("button[id='btnSave']").each(function () {
                    $(this).show();
                });
                $("#AddMoreTR").find("select[id='ServiceType']").each(function () {
                    $(this).val(NullHandle(varWS[0].ServiceId));
                });
                $("#AddMoreTR").find("input[type='text'][id='Date']").each(function () {
                    $(this).val(NullHandle(varWS[0].ZZServiceDate));
                    $('.datetimepicker').datetimepicker({ theme: 'light', timepicker: false, format: 'd-m-Y', scrollMonth: false, scrollInput: false });
                });
                $("#AddMoreTR").find("input[type='text'][id='Consumption']").each(function () {
                    $(this).val(NullHandle(varWS[0].Consumption));
                });
                $("#AddMoreTR").find("input[type='text'][id='Unit']").each(function () {
                    $(this).val(NullHandle(varWS[0].ZZUOM));
                });
                $("#AddMoreTR").find("input[type='text'][id='Rate']").each(function () {
                    $(this).val(NullHandle(varWS[0].Rate));
                });
                $("#AddMoreTR").find("input[type='text'][id='Amount']").each(function () {
                    $(this).val(NullHandle(varWS[0].Amount));
                });
                $("#AddMoreTR").find("textarea[id='Remark']").each(function () {
                    $(this).val(NullHandle(varWS[0].Remark));
                });
                $("#AddMoreTR").find("input[type='hidden'][id='hdnUOMPropId']").each(function () {
                    $(this).val(NullHandle(varWS[0].UOMPropId));
                });

                $("#AddMoreTR").show();
                MaskControls();
                $("#ServiceType").focus();
            }
        }
        catch (e) {

        }
    }

    ///////////////////////////// Vehicle Save  //////////////////////////////////////////////////////
    function AddOnServicesSave() {
        try {
            var model = {};
            var strMSG = '';
            var varWS = jQuery.grep(LoadAddOnServicesList, function (obj) {
                return obj.BookingAddOnServiceId == BookingAddOnServiceId;
            });
            var btnSave = "";

            if (parseInt(BookingAddOnServiceId) > 0 && varWS != undefined && varWS.length > 0) {
                model = varWS[0];
            }
            else {
                model.BookingAddOnServiceId = -1;
            }

            $("#AddMoreTR").find("button[id='btnSave']").each(function () {
                btnSave = $(this);
            });
            $("#AddMoreTR").find("select[id='ServiceType']").each(function () {
                model.ServiceId = $(this).val().trim();
                if ($(this).val().trim() == "") {
                    strMSG = strMSG + 'Select Description \n</br>'
                }
            });
            $("#AddMoreTR").find("input[type='text'][id='Date']").each(function () {
                model.ZZServiceDate = $(this).val().trim();
                if ($(this).val().trim() == "") {
                    strMSG = strMSG + 'Select Date \n</br>'
                }
            });
            $("#AddMoreTR").find("input[type='text'][id='Consumption']").each(function () {
                model.Consumption = $(this).val().trim();
                if ($(this).val().trim() == "") {
                    strMSG = strMSG + 'Consumption \n</br>'
                }
            });
            $("#AddMoreTR").find("input[type='hidden'][id='hdnUOMPropId']").each(function () {
                model.UOMPropId = $(this).val();
            });
            $("#AddMoreTR").find("input[type='text'][id='Rate']").each(function () {
                model.Rate = $(this).val().trim();
            });
            $("#AddMoreTR").find("input[type='text'][id='Amount']").each(function () {
                model.Amount = $(this).val().trim();
            });
            $("#AddMoreTR").find("textarea[id='Remark']").each(function () {
                model.Remark = $(this).val().trim();
                if ($(this).val().trim() == "") {
                    strMSG = strMSG + 'Remark  \n</br>'
                }
            });

            if (strMSG != '') {
                alert("Please enter data for Mandatory fields  \n</br>" + strMSG);
                return false;
            }
            else {

                btnSave.hide();
                LoaderShow();
                var data = {'model': model};
                var dataWithAntiforgeryToken = $.extend(data, { "__RequestVerificationToken": $("input[name=__RequestVerificationToken]").val() });
                $.ajax({
                    url: '@Url.Action("AddOnServicesSave", "Home")',
                    type: 'POST',
                    dataType: 'json',
                    async: true,
                    data: dataWithAntiforgeryToken,
                    //contentType: "application/json; charset=utf-8",
                    success: function (data) {

                        LoaderHide();
                        if (data.StatusId != "99" && data.StatusId != "-99") {
                            LoadAddOnServicesList = data.LoadAddOnServicesList;
                            BindWSData(data.LoadAddOnServicesList);

                            if (LoadAddOnServicesList.length > 0) {
                                $("#btnNext").show();
                            }
                        }
                        btnSave.show();
                        alert(data.Status);
                    },
                    error: function (xhr) {

                        btnSave.show();
                        LoaderHide();
                        alert(xhr.responseText);
                    }
                });
            }
        }
        catch (e) {
            LoaderHide();
            btnSave.show();
            alert(e.message);
            return false;
        }
    }

    ///////////////////////////// Delete Info  //////////////////////////////////////////////////////
    function AddOnServicesDelete(varBookingAddOnServiceId) {

        try {
            $.confirm({
                title: 'Confirm Alert!',
                content: "Are you sure want to delete?",
                icon: 'fa fa-question',
                closeIcon: true,
                animation: 'scale',
                type: 'orange',
                escapeKey: 'cancel',
                buttons: {
                    MyFunction: {
                        text: 'OK',
                        action: function () {
                            LoaderShow();
                            var data = { 'intBookingAddOnServiceId': varBookingAddOnServiceId };
                            var dataWithAntiforgeryToken = $.extend(data, { "__RequestVerificationToken": $("input[name=__RequestVerificationToken]").val() });
                            $.ajax({
                                url: '@Url.Action("AddOnServicesDelete", "Home")',
                                type: 'POST',
                                dataType: 'json',
                                async: true,
                                data: dataWithAntiforgeryToken,
                                success: function (data) {

                                    LoaderHide();
                                    if (data.StatusId != "99" && data.StatusId != "-99") {
                                        LoadAddOnServicesList = data.LoadAddOnServicesList;
                                        BindWSData(data.LoadAddOnServicesList);

                                        if (LoadAddOnServicesList.length > 0) {
                                            $("#btnNext").show();
                                        }
                                        else {
                                            $("#btnNext").hide();
                                        }
                                    }
                                    alert(data.Status);
                                },
                                error: function (xhr) {

                                    LoaderHide();
                                    alert(xhr.responseText);
                                }
                            });

                        }
                    },
                    cancel: function () {
                    }
                }
            });

        }
        catch (e) {

            LoaderHide();
            alert(e.message);
            //  return false;
        }
    }

    ///////////////////////////// Bind Info  //////////////////////////////////////////////////////
    function BindWSData(data) {
        try {
            var gridData = "";
            var StatusPropId = $("#StatusPropId").val();
            var WorkFlowId = $("#WorkFlowId").val();
            //var row = $('#tbodyVehicle').find('tr:eq(0)');

            gridData = '<tr id="AddMoreTR" style="display: none;">' + $("#AddMoreTR").html() + '</tr>';
            debugger;
            $("#lblWSCount").text(NullHandle(data.length));

            $("#tbodyWS").html("");

            for (var i = 0; i < data.length; i++) {
                gridData = gridData + "<tr>";

                gridData = gridData + "<td>" + NullHandle(data[i].ZZServiceName) + "</td>";
                gridData = gridData + "<td style='text-align:center'>" + NullHandle(data[i].ZZServiceDate) + "</td>";
                gridData = gridData + "<td style='text-align:center'>" + NullHandle(data[i].Consumption) + "</td>";
                gridData = gridData + "<td style='text-align:center'>" + NullHandle(data[i].ZZUOM) + "</td>";
                gridData = gridData + "<td style='text-align:right'>" + NullHandle(data[i].Rate) + "</td>";
                gridData = gridData + "<td style='text-align:right'>" + NullHandle(data[i].Amount) + "</td>";
                gridData = gridData + "<td>" + NullHandle(data[i].Remark) + "</td>";

                if (parseInt(StatusPropId) == 40 && parseInt(WorkFlowId) == 6) {
                    gridData = gridData + "<td class='td-actions text-center'>";
                    gridData = gridData + "<button type='button' rel='tooltip' class='btn btn-info' title='Edit Addon Service : " + NullHandle(data[i].ZZServiceName) + "' onclick='return AddOnServicesEdit(" + NullHandle(data[i].BookingAddOnServiceId) + ")' > <i class='material-icons'>edit</i></button>&nbsp;";
                    gridData = gridData + "<button type='button' rel='tooltip' class='btn btn-danger' title='Delete Addon Service : " + NullHandle(data[i].ZZServiceName) + "' onclick='return AddOnServicesDelete(" + NullHandle(data[i].BookingAddOnServiceId) +")'><i class='material-icons'>close</i></button>";
                    gridData = gridData +"</td>";
                }
                else {
                    gridData = gridData + "<td class='text - center'></td>";
                }
                //gridData = gridData + "<td style='display:none'><input type='hidden' id='hdnUOMPropId' value=" + NullHandle(data[i].UOMPropId) + " /> </td>";
                gridData = gridData + "</tr>";
            }

            $("#tbodyWS").html(gridData);


        }
        catch (e) {

        }
    }

    //////////////////////// Set Rate Unit ////////////////////////////////////////////////////////
    function SetRateUnit() {
        try {

            var varDate = $("#Date").val().trim();
            var varServiceId = $("#ServiceType").val();
            var varTimeSlotId = 0;

            var strMSG = "";
            if (parseInt(varServiceId) == 0) {
                alert("Select Description");
                return false;
            }

            if (varDate=="") {
                return false;
            }


            if (strMSG != '') {
                alert("Please enter data for Mandatory fields  \n</br>" + strMSG);
                return false;
            }
            else {

                var data = '';
                var varServiceList = [];

                varServiceList[0] = NullHandle(varServiceId);

                var data = { 'intlstServiceId': varServiceList, 'intTimeSlotId': parseInt(varTimeSlotId), 'strWED': varDate };
                var dataWithAntiforgeryToken = $.extend(data, { "__RequestVerificationToken": $("input[name=__RequestVerificationToken]").val() });
            LoaderShow();
            $.ajax({
                url: '@Url.Action("BookingStatusGetByServiceIdTimeSlotPropIdWEFDate", "Home")',
                type: 'POST',
                dataType: 'json',
                async: true,
                data: dataWithAntiforgeryToken,
               // contentType: "application/json; charset=utf-8",
                success: function (dataBokkingStatus) {

                    LoaderHide();

                    if (dataBokkingStatus.StatusId != "99" && dataBokkingStatus.StatusId != "-99") {
                        var varBookingStatusList = dataBokkingStatus.BookingStatusList;
                        var varConsumption = 0;
                        if (varBookingStatusList.length > 0) {
                            $("#AddMoreTR").find("input[type='text'][id='Consumption']").each(function () {
                                varConsumption = $(this).val().trim();
                                if (varConsumption == undefined || varConsumption == "") {
                                    varConsumption=0
                                }
                            });

                            $("#AddMoreTR").find("input[type='text'][id='Unit']").each(function () {
                                $(this).val(NullHandle(varBookingStatusList[0].UOM));
                            });
                            $("#AddMoreTR").find("input[type='text'][id='Rate']").each(function () {
                                $(this).val(NullHandle(varBookingStatusList[0].Rate));
                            });
                            $("#AddMoreTR").find("input[type='text'][id='Amount']").each(function () {
                                $(this).val(parseFloat(varBookingStatusList[0].Rate) * parseFloat(varConsumption));
                            });
                            $("#AddMoreTR").find("input[type='hidden'][id='hdnUOMPropId']").each(function () {
                                $(this).val(NullHandle(varBookingStatusList[0].UOMPropId));
                            });
                        }
                    }
                    else {
                        alert(data.Status);
                    }
                },
                error: function (xhr) {

                    LoaderHide();
                    alert(xhr.responseText);
                }
            });
            }
        }
        catch (e) {
            LoaderHide();
            alert(xhr.responseText);
        }

    }

    ///////////////////////////// Calculate Amount  //////////////////////////////////////////////////////
    function CalculateAmount() {
        try {
            var varConsumption = 0;
            var varRate = 0;

            $("#AddMoreTR").find("input[type='text'][id='Consumption']").each(function () {
                varConsumption = $(this).val().trim();
                if (varConsumption == undefined || varConsumption == "") {
                    varConsumption = 0
                }
            });

            $("#AddMoreTR").find("input[type='text'][id='Rate']").each(function () {
                varRate = $(this).val().trim();
                if (varRate == undefined || varRate == "") {
                    varRate = 0
                }
            });

            $("#AddMoreTR").find("input[type='text'][id='Amount']").each(function () {
                $(this).val(parseFloat(varRate) * parseFloat(varConsumption));
            });


        }
        catch (e) {

        }
    }

    ///////////////////////////// Set Button Visibility  //////////////////////////////////////////////////////
    function SetButtonVisibility() {
        try {
            if (parseInt($("#StatusPropId").val()) == 40 && parseInt($("#WorkFlowId").val())==6) {
                $("#btnAdd").attr('disabled', false);
            }
            else {
                $("#btnAdd").attr('disabled', true);
            }
        }
        catch (e) {

        }
    }


    ///////////////////////////// Masking  //////////////////////////////////////////////////////
    function MaskControls() {
        try {
            (function ($) {
                $(function () {

                    $("#AddMoreTR").find("input[type='text'][id='Consumption']").each(function () {
                        $(this).attr('onkeypress', 'return CheckIsNumeric(event,this);');
                    });                    
                    
                });
            })(jQuery);
        }
        catch (e) {

        }
    }

    $(document).ready(function () {
        MaskControls();
        SetButtonVisibility();
        LoadAddOnServicesInfo();
    });

</script>